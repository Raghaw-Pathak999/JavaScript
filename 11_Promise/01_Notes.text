--- What is a Promise in JavaScript? 

A Promise is an object representing the eventual completion or failure of an asynchronous operation and its result.

** Technical Definition **

A Promise is an object with three possible states:-

1. Pending – The initial state (operation still going)

2. Fulfilled – The operation completed successfully

3. Rejected – The operation failed

Syntax:-

let promise = new Promise(function(resolve, reject) {
  // async code
});

-- resolve(value) — if successful, sends result

-- reject(error) — if failed, sends an error

Example:-

let promise = new Promise(function(resolve, reject) {

  let success = true;

  if (success) {
    resolve("✅ Promise is fulfilled!");
  } else {
    reject("❌ Promise is rejected.");
  }

});

-- Consuming a Promise with .then(), .catch(), and .finally()

Once you have a Promise, you need to consume it to get the result or handle the error.

** .then(): Handling Success **

.then() is used to handle the fulfilled (success) state.

** .catch(): Handling Errors **

.catch() is used to handle the rejected (error) state.

** .finally(): Runs Regardless of Outcome **

.finally() always runs after the Promise settles (whether it was fulfilled or rejected).

=========================   Close File ctrl + B    ========================>>>> 

Task Type          |Real Example            |JS Code Example                        | Async          |
-------------------|------------------------|---------------------------------------|----------------|
Timer              |Alarm set karna         |`setTimeout`, `setInterval`            | Time delay     |
API Call           |Weather app data fetch  |`fetch()`, `axios.get()`               | Server         |
File Reading       |Mobile me PDF open karna|`fs.readFile()` (Node.js)              | File disk      |
Camera Access      |Photo click             |`navigator.mediaDevices.getUserMedia()`| Hardware       |
Audio/Video Load   |YouTube video play      |`video.play()`                         | Buffer/load    |
User Input Wait    |User ka form bharna     |`onclick`, `onchange`                  | Utill user I/O |
Bluetooth/WiFi Scan|Devices scan karna      |Web Bluetooth API                      | External       |
Database Query     |Student record fetch    |MongoDB/MySQL query                    | DB data        |
Game Asset Load    |Game graphics load      |`Image.onload`, `audio.load()`         | File loads     |
Import module      |Dynamic module load     |`import()`                             | Module download|
